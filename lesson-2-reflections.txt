What happens when you initialize a repository? Why do you need to do it?
The .git hidden folder is created together with the files to control the repository

How is the staging area different from the working directory and the repository?
It indicates files which are ready to be committed and will be committed at the next commit
What value do you think it offers?
It allows control over which files in the working directory will actually be committed.

How can you use the staging area to make sure you have one commit per logical change?
You can review the diff betwen the staging area and the last commit by using 'git diff --staged'q

What are some situations when branches would be helpful in keeping your history organized? 
Trying out a change to the way an object reacts to inputs
Refactoring some code to make it more efficient
How would branches help?
They would allow an easy switch between the two branches before proceeding.

How do the diagrams help you visualize the branch structure?
They show the way in which commits relate to one another and which are reachable from the current branch.

What is the result of merging two branches together?
The result is that the head of the currently checked out branch will now include the changes made in the merged branch. 
Why do we represent it in the diagram the way we do?
Because the two branches have now come together.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Automatic merging will save time in many obvious instances but sometimes it finds apparent conflicts 
which would be immediately resolved in a manual process